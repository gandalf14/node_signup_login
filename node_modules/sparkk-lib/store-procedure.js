// Usage in your .js file
// var sp = require('sparkk-lib/store-procedure');
// var userLoginSp = new sp(<procedure-name>);
//
// Start adding parameters
// userLoginSp.add("value");
// userLoginSp.add(variable);
//
// Finally invoke 'call' to get the sp string
// var userLoginCall = userLoginSp.call();
//
// Make use of this function in connection.query
// connection.query(userLoginCall, function(err, row){
//  // your query response handling code
// });

var storeProcedure = function(name) {
  // Name of the store procedure
  this.spName = name;

  // Parameters
  this.params = [];

  // Single sp call lock
  this.invoked = false;

  // Add parameters to parameters array
  this.add = function(value, isStr) {
    console.log("Adding "+value+" to sp = "+this.spName);
    
    // Convert parameter based on "isStr" flag
    if(isStr) {
      value = "'"+value+"'";
    }

    // Add value to array
    this.params.push(value);
  }

  this.getSpParamsString = function() {
    // If input is not an array, convert it into an array for easy handling
    if(!(this.params instanceof Array)) {
      this.params = [this.params];
    }

    // Convert array into ',' separated string
    this.params = this.params.join();

    return this.params;
  }

  // Call Store procedure
  // Success : returns the store procedure call string
  // failure : returns false
  this.call = function() {
    // Flag : call should be invoked only once per "storeProcedure" instance
    if(!this.invoked)  this.invoked = true;

    // Convert params to ',' separated string
    var paramsStr = this.getSpParamsString();

    // empty string error handling
    if(typeof paramsStr === 'undefined' || paramsStr === '' || typeof this.spName === 'undefined' || this.spName === '') {
      return false;
    }

    // Form the sp call according to syntax
    // Syntax : "CALL <sp-name>(params--comma-separated-string)"
    var spCallStr = "CALL "+this.spName+"("+paramsStr+")";

    console.log('SP invoked : '+spCallStr);

    return spCallStr; 
  }
};

module.exports = storeProcedure;
